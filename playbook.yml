---
- name: Setup and configure application instance
  hosts: gce_instance
  become: yes

  tasks:
    - name: Update and install required packages
      apt:
        name:
          - mysql-client
          - openjdk-17-jre
          - python3-pymysql
        update_cache: yes
        state: present

    - name: Copy SQL file to the instance
      copy:
        src: "./devops.sql"
        dest: /tmp/devops.sql
        mode: '0644'

    - name: Run SQL script on MySQL database
      mysql_db:
        state: import
        target: "/tmp/devops.sql"
        login_host: "{{ db_host }}"
        login_user: "{{ lookup('env', 'DB_USER') }}"
        login_password: "{{ lookup('env', 'DB_PASSWORD') }}"
        name: "all"
      register: sql_result
    
    - name: Display SQL execution result
      debug:
        var: sql_result

    - name: Ensure the directory for the application exists
      ansible.builtin.file:
        path: /opt/myapp
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy the JAR file to the server
      ansible.builtin.copy:
        src: DevsOps-0.0.1-SNAPSHOT.jar
        dest: /opt/myapp/app.jar
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create a systemd service file for the application
      ansible.builtin.template:
        src: myapp.service.j2
        dest: /etc/systemd/system/myapp.service
        mode: '0644'
      notify: Restart myapp service

    - name: Reload systemd to pick up the new service file
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable myapp service to start on boot
      ansible.builtin.systemd:
        name: myapp
        enabled: yes
        state: started

  handlers:
    - name: Restart myapp service
      ansible.builtin.systemd:
        name: myapp
        state: restarted
