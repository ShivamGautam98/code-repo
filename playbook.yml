---
- name: Setup and configure application instance
  hosts: gce_instance
  become: yes
  vars:
    db_host: "10.41.0.3"  # Replace with your dynamic or static IP
    db_user: "root"
    db_password: "admin"
    sql_file: "./devops.sql" # Replace with the actual path to your SQL file
    db_name: "devops"

  tasks:
    - name: Update and install required packages
      apt:
        name:
          - mysql-client
          - openjdk-17-jre
        update_cache: yes
        state: present

    - name: Copy SQL file to the instance
      copy:
        src: "{{ sql_file }}"
        dest: /tmp/devops.sql
        mode: '0644'

    - name: Create MySQL credentials file
      copy:
        content: |
          [client]
          user={{ db_user }}
          password={{ db_password }}
          host={{ db_host }}
        dest: /root/.my.cnf
        mode: '0600'

    - name: Run SQL script on MySQL database
      mysql_db:
        state: import
        target: "{{ sql_file }}"
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        name: "all"
      register: sql_result


    - name: Ensure the directory for the application exists
      ansible.builtin.file:
        path: /opt/myapp
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy the JAR file to the server
      ansible.builtin.copy:
        src: ./target/*.jar
        dest: /opt/myapp/app.jar
        owner: ubuntu
        group: ubuntu
        mode: '0755'
    
    - name: Copy the JAR file to the server
      ansible.builtin.copy:
        src: ./devops.sql
        dest: /opt/myapp/devops.sql
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create a systemd service file for the application
      ansible.builtin.template:
        src: myapp.service.j2
        dest: /etc/systemd/system/myapp.service
        mode: '0644'
      notify: Restart myapp service

    - name: Reload systemd to pick up the new service file
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable myapp service to start on boot
      ansible.builtin.systemd:
        name: myapp
        enabled: yes
        state: started

  handlers:
    - name: Restart myapp service
      ansible.builtin.systemd:
        name: myapp
        state: restarted
