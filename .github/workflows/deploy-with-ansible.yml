name: CI/CD with Ansible to GCP Compute Engine

on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_PAT_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ShivamGautam98_code-repo

    - name: Build with Maven
      run: mvn clean package -DskipTests
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: app.jar
        path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: app.jar

    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      env:
        DB_USER: ${{ secrets.DB_USER}}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD}}
      with:
        playbook: playbook.yml
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        options: |
          --inventory inventory.ini